digraph ClassDiagram {
	node [shape=plaintext]
	edge [arrowhead=empty];

"LanguageResource üê±relationship compositionOf LanguageService, 0..1" [ label = <<TABLE CELLSPACING="0">
	<TR><TD><B>LanguageResource üê±relationship compositionOf LanguageService, 0..1</B></TD></TR>
	<TR><TD><I>Methods</I><BR/>
getAll():Map
<BR align="left" />

</TD></TR>


</TABLE>>]


"DeploymentResource" [ label = <<TABLE CELLSPACING="0">
	<TR><TD><B>DeploymentResource</B></TD></TR>
	<TR><TD><I>Methods</I><BR/>
all():String
<BR align="left" />
start():String
<BR align="left" />
get():String
<BR align="left" />
stop():String
<BR align="left" />

</TD></TR>


</TABLE>>]


"IntegrationsResource" [ label = <<TABLE CELLSPACING="0">
	<TR><TD><B>IntegrationsResource</B></TD></TR>
	<TR><TD><I>Methods</I><BR/>
crd(&lt;String&gt; dsl):Map&lt;String, Map&lt;String&gt;&gt;
<BR align="left" />

</TD></TR>


</TABLE>>]


		"DeploymentService" -> "IntegrationsResource" [dir=both; arrowhead=diamond; arrowtail=none
		
		, taillabel="0..1"
		
		]
"StepResource" [ label = <<TABLE CELLSPACING="0">
	<TR><TD><B>StepResource</B></TD></TR>
	<TR><TD><I>Methods</I><BR/>
allSteps(&lt;String&gt; type, &lt;String&gt; dsl, &lt;String&gt; kind):List[Step]
<BR align="left" />
stepById(&lt;String&gt; id):Step
<BR align="left" />
stepsByName(&lt;String&gt; name):List[Step]
<BR align="left" />

</TD></TR>


</TABLE>>]


		"StepResource" -> "StepCatalog" [
		arrowhead=open, style=dashed
		
		
		
		]
"ViewDefinitionResource" [ label = <<TABLE CELLSPACING="0">
	<TR><TD><B>ViewDefinitionResource</B></TD></TR>
	<TR><TD><I>Methods</I><BR/>
viewsPerStepList:(&lt;Step[]&gt; DeploymentResourceYamlRequest):
<BR align="left" />

</TD></TR>


</TABLE>>]


		"ViewDefinitionService" -> "ViewDefinitionResource" [dir=both; arrowhead=diamond; arrowtail=none
		
		, taillabel="0..1"
		
		]
"Capabilities" [ label = <<TABLE CELLSPACING="0">
	<TR><TD><B>Capabilities</B></TD></TR>
	
</TABLE>>]


"Integration" [ label = <<TABLE CELLSPACING="0">
	<TR><TD><B>Integration</B></TD></TR>
	
</TABLE>>]


"DeploymentService This endpoint will return a list of views based on" [ label = <<TABLE CELLSPACING="0">
	<TR><TD><B>DeploymentService This endpoint will return a list of views based on</B></TD></TR>
	<TR><TD><I>Methods</I><BR/>
yaml(&lt;List[Step]&gt; steps, &lt;String&gt; name):String
<BR align="left" />

</TD></TR>


</TABLE>>]


"LanguageService" [ label = <<TABLE CELLSPACING="0">
	<TR><TD><B>LanguageService</B></TD></TR>
	<TR><TD><I>Methods</I><BR/>
getAll():Map
<BR align="left" />

</TD></TR>


</TABLE>>]


"ViewDefinitionService" [ label = <<TABLE CELLSPACING="0">
	<TR><TD><B>ViewDefinitionService</B></TD></TR>
	<TR><TD><I>Methods</I><BR/>
viewsPerStepList(&lt;Step[]&gt; steps):List[ViewDefinition]
<BR align="left" />

</TD></TR>


</TABLE>>]


		"ViewDefinitionService" -> "StepParserService" [
		arrowhead=open, style=dashed
		
		
		
		]
		"ViewDefinitionService" -> "ViewDefinitionParserService" [
		arrowhead=open, style=dashed
		
		
		
		]
"AbstractCatalog" [ label = <<TABLE CELLSPACING="0">
	<TR><TD><B>AbstractCatalog</B></TD></TR>
	<TR><TD><I>Methods</I><BR/>
waitForWarmUp():CompletableFuture
<BR align="left" />
loadParsers():List[ParseCatalog]
<BR align="left" />

</TD></TR>


</TABLE>>]


		"AbstractCatalog" -> "MetadataCatalog" [
		arrowhead=open, style=dashed
		
		
		
		]
"StepCatalog" [ label = <<TABLE CELLSPACING="0">
	<TR><TD><B>StepCatalog</B></TD></TR>
	
</TABLE>>]

	"StepCatalog" -> "AbstractCatalog"

"ViewDefinitionCatalog" [ label = <<TABLE CELLSPACING="0">
	<TR><TD><B>ViewDefinitionCatalog</B></TD></TR>
	
</TABLE>>]

	"ViewDefinitionCatalog" -> "AbstractCatalog"

"KameletParseCatalog" [ label = <<TABLE CELLSPACING="0">
	<TR><TD><B>KameletParseCatalog</B></TD></TR>
	
</TABLE>>]


		"KameletParseCatalog" -> "ParseCatalog" [
		arrowhead=open, style=dashed
		
		
		
		]
"Kamelet" [ label = <<TABLE CELLSPACING="0">
	<TR><TD><B>Kamelet</B></TD></TR>
	
</TABLE>>]


"KameletBinding" [ label = <<TABLE CELLSPACING="0">
	<TR><TD><B>KameletBinding</B></TD></TR>
	
</TABLE>>]


"MetadataCatalog" [ label = <<TABLE CELLSPACING="0">
	<TR><TD><B>MetadataCatalog</B></TD></TR>
	<TR><TD><I>Methods</I><BR/>
searchStepByID(&lt;String&gt; id):Metadata
<BR align="left" />
searchStepByName(&lt;String&gt; name):Metadata
<BR align="left" />
store(&lt;List[Step]&gt; steps):boolean
<BR align="left" />
getAll():List[Metadata]
<BR align="left" />

</TD></TR>


</TABLE>>]


		"MetadataCatalog" -> "Metadata" [
		arrowhead=open, style=dashed
		
		
		
		]
"ParseCatalog" [ label = <<TABLE CELLSPACING="0">
	<TR><TD><B>ParseCatalog</B></TD></TR>
	<TR><TD><I>Methods</I><BR/>
parse():CompletableFuture[List[T]]
<BR align="left" />
setFileVisitor(&lt;YamlProcessFile&gt; fileVisitor):
<BR align="left" />

</TD></TR>


</TABLE>>]


"CatalogCollection" [ label = <<TABLE CELLSPACING="0">
	<TR><TD><B>CatalogCollection</B></TD></TR>
	
</TABLE>>]

	"CatalogCollection" -> "MetadataCatalog"

"InMemoryCatalog" [ label = <<TABLE CELLSPACING="0">
	<TR><TD><B>InMemoryCatalog</B></TD></TR>
	
</TABLE>>]

	"InMemoryCatalog" -> "MetadataCatalog"

"ReadOnlyCatalog" [ label = <<TABLE CELLSPACING="0">
	<TR><TD><B>ReadOnlyCatalog</B></TD></TR>
	
</TABLE>>]

	"ReadOnlyCatalog" -> "CatalogCollection"

"ClusterParseCatalog" [ label = <<TABLE CELLSPACING="0">
	<TR><TD><B>ClusterParseCatalog</B></TD></TR>
	
</TABLE>>]

	"ClusterParseCatalog" -> "ParseCatalog"

"GitParseCatalog" [ label = <<TABLE CELLSPACING="0">
	<TR><TD><B>GitParseCatalog</B></TD></TR>
	
</TABLE>>]

	"GitParseCatalog" -> "ParseCatalog"

		"GitParseCatalog" -> "YamlProcessFile" [
		arrowhead=open, style=dashed
		
		
		
		]
"JarParseCatalog" [ label = <<TABLE CELLSPACING="0">
	<TR><TD><B>JarParseCatalog</B></TD></TR>
	
</TABLE>>]

	"JarParseCatalog" -> "ParseCatalog"

"LocalFolderParseCatalog" [ label = <<TABLE CELLSPACING="0">
	<TR><TD><B>LocalFolderParseCatalog</B></TD></TR>
	
</TABLE>>]

	"LocalFolderParseCatalog" -> "ParseCatalog"

"YamlProcessFile" [ label = <<TABLE CELLSPACING="0">
	<TR><TD><B>YamlProcessFile</B></TD></TR>
	
</TABLE>>]


		"YamlProcessFile" -> "GitParseCatalog" [
		arrowhead=open, style=dashed
		
		
		
		]
"ViewDefinitionParseCatalog" [ label = <<TABLE CELLSPACING="0">
	<TR><TD><B>ViewDefinitionParseCatalog</B></TD></TR>
	
</TABLE>>]


		"ViewDefinitionParseCatalog" -> "ParseCatalog" [
		arrowhead=open, style=dashed
		
		
		
		]
"Metadata" [ label = <<TABLE CELLSPACING="0">
	<TR><TD><B>Metadata</B></TD></TR>
	<TR><TD><I>Properties</I><BR/>
ID:String<BR align="left" />name:String<BR align="left" />type:String<BR align="left" />

</TD></TR>


</TABLE>>]


"Parameter" [ label = <<TABLE CELLSPACING="0">
	<TR><TD><B>Parameter</B></TD></TR>
	<TR><TD><I>Properties</I><BR/>
description:String<BR align="left" />title:String<BR align="left" />id:String<BR align="left" />value:Object<BR align="left" />default:Object<BR align="left" />type:String<BR align="left" />path:Boolean<BR align="left" />nullable:Boolean<BR align="left" />enum:Object[]<BR align="left" />examples:Object[]<BR align="left" />

</TD></TR>


</TABLE>>]


"Branch" [ label = <<TABLE CELLSPACING="0">
	<TR><TD><B>Branch</B></TD></TR>
	
</TABLE>>]


"Step" [ label = <<TABLE CELLSPACING="0">
	<TR><TD><B>Step</B></TD></TR>
	<TR><TD><I>Properties</I><BR/>
description:String<BR align="left" />title:String<BR align="left" />parameters:List[Parameter]<BR align="left" />icon:String<BR align="left" />UUID:String<BR align="left" />required:String[]<BR align="left" />group:String<BR align="left" />kind:String<BR align="left" />branches:Branch[]<BR align="left" />

</TD></TR>


</TABLE>>]

	"Step" -> "Metadata"

"ViewDefinition" [ label = <<TABLE CELLSPACING="0">
	<TR><TD><B>ViewDefinition</B></TD></TR>
	<TR><TD><I>Properties</I><BR/>
properties:Map[String, String]<BR align="left" />step:Step<BR align="left" />url:String<BR align="left" />constraints:List[ViewDefinitionConstraint]<BR align="left" />

</TD></TR>


</TABLE>>]

	"ViewDefinition" -> "Metadata"

		"ViewDefinitionConstraint" -> "ViewDefinition" [dir=both; arrowhead=diamond; arrowtail=none
		
		, taillabel="0..n"
		
		]
"ViewDefinitionConstraint" [ label = <<TABLE CELLSPACING="0">
	<TR><TD><B>ViewDefinitionConstraint</B></TD></TR>
	<TR><TD><I>Properties</I><BR/>
mandatory:boolean<BR align="left" />operation:ConstraintOperation<BR align="left" />parameter:String<BR align="left" />

</TD></TR>


</TABLE>>]


"DeploymentGeneratorService" [ label = <<TABLE CELLSPACING="0">
	<TR><TD><B>DeploymentGeneratorService</B></TD></TR>
	<TR><TD><I>Methods</I><BR/>
identifier():String
<BR align="left" />
description():String
<BR align="left" />
parse(&lt;List[Step]&gt; steps, &lt;Map&gt; metadata):String
<BR align="left" />
appliesTo(&lt;List[Step]&gt; steps):boolean
<BR align="left" />
supportedCustomResources():List&lt;Class&gt;
<BR align="left" />
getKinds():String[]
<BR align="left" />

</TD></TR>


</TABLE>>]


		"DeploymentGeneratorService" -> "Step" [
		arrowhead=open, style=dashed
		
		
		
		]
"StepParserService" [ label = <<TABLE CELLSPACING="0">
	<TR><TD><B>StepParserService</B></TD></TR>
	<TR><TD><I>Methods</I><BR/>
identifier():String
<BR align="left" />
description():String
<BR align="left" />
parse(&lt;String&gt; yaml):ParseResult
<BR align="left" />
appliesTo(&lt;String&gt; yaml):boolean
<BR align="left" />

</TD></TR>


</TABLE>>]


		"StepParserService" -> "Step" [
		arrowhead=open, style=dashed
		
		
		
		]
"ViewDefinitionParserService" [ label = <<TABLE CELLSPACING="0">
	<TR><TD><B>ViewDefinitionParserService</B></TD></TR>
	<TR><TD><I>Methods</I><BR/>
parse(&lt;List[Step]&gt; steps):List[ViewDefinition]
<BR align="left" />
getViewsPerStep(&lt;List[Step]&gt; steps, &lt;ViewDefinition&gt; view):List[ViewDefinition]
<BR align="left" />
appliesTo(&lt;List[Step]&gt; steps, &lt;ViewDefinition&gt; viewDefinition):boolean
<BR align="left" />

</TD></TR>


</TABLE>>]


		"ViewDefinitionParserService" -> "ViewDefinition" [
		arrowhead=open, style=dashed
		
		
		
		]


}
