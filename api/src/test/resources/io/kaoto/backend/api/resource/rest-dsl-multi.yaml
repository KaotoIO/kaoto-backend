- route:
    id: rest-route
    rest:
      path: /api/v3
      post:
      - consumes: application/json,application/xml
        id: addPet
        uri: /pet
        param:
        - dataType: boolean
          defaultValue: false
          name: verbose
          description: Verbose data
          required: false
          type: query
        - name: body
          description: Pet object that needs to be added to the store
          required: true
          type: body
        to:
          uri: direct:addPet
      - consumes: application/x-www-form-urlencoded
        id: updatePetWithForm
        uri: /pet/{petId}
        param:
        - dataType: integer
          name: petId
          description: ID of pet that needs to be updated
          required: true
          type: path
        - dataType: string
          name: name
          description: Updated name of the pet
          required: true
          type: formData
        - dataType: string
          name: status
          description: Updated status of the pet
          required: true
          type: formData
        to:
          uri: direct:updatePetWithForm
      - consumes: multipart/form-data
        id: uploadFile
        produces: application/json
        uri: /pet/{petId}/uploadImage
        param:
        - dataType: integer
          name: petId
          description: ID of pet to update
          required: true
          type: path
        - dataType: string
          name: additionalMetadata
          description: Additional data to pass to server
          required: true
          type: formData
        - dataType: string
          name: file
          description: file to upload
          required: true
          type: formData
        to:
          uri: direct:uploadFile
      - consumes: '*/*'
        id: placeOrder
        produces: application/xml,application/json
        uri: /store/order
        param:
        - name: body
          description: order placed for purchasing the pet
          required: true
          type: body
        to:
          uri: direct:placeOrder
      - consumes: '*/*'
        id: createUser
        uri: /user
        description: This can only be done by the logged in user.
        param:
        - name: body
          description: Created user object
          required: true
          type: body
        to:
          uri: direct:createUser
      - consumes: '*/*'
        id: createUsersWithArrayInput
        uri: /user/createWithArray
        param:
        - name: body
          description: List of user object
          required: true
          type: body
        to:
          uri: direct:createUsersWithArrayInput
      - consumes: '*/*'
        id: createUsersWithListInput
        uri: /user/createWithList
        param:
        - name: body
          description: List of user object
          required: true
          type: body
        to:
          uri: direct:createUsersWithListInput
      get:
      - id: findPetsByStatus
        produces: application/xml,application/json
        uri: /pet/findByStatus
        description: Multiple status values can be provided with comma separated strings
        param:
        - arrayType: string
          collectionFormat: multi
          dataType: array
          name: status
          description: Status values that need to be considered for filter
          required: true
          type: query
        to:
          uri: direct:findPetsByStatus
      - id: findPetsByTags
        produces: application/xml,application/json
        uri: /pet/findByTags
        description: Muliple tags can be provided with comma separated strings.
        param:
        - arrayType: string
          collectionFormat: multi
          dataType: array
          name: tags
          description: Tags to filter by
          required: true
          type: query
        to:
          uri: direct:findPetsByTags
      - id: getPetById
        produces: application/xml,application/json
        uri: /pet/{petId}
        description: Returns a single pet
        param:
        - dataType: integer
          name: petId
          description: ID of pet to return
          required: true
          type: path
        to:
          uri: direct:getPetById
      - id: getInventory
        produces: application/json
        uri: /store/inventory
        description: Returns a map of status codes to quantities
        to:
          uri: direct:getInventory
      - id: getOrderById
        produces: application/xml,application/json
        uri: /store/order/{orderId}
        description: For valid response try integer IDs with value >= 1 and <= 10.
        param:
        - dataType: integer
          name: orderId
          description: ID of pet that needs to be fetched
          required: true
          type: path
        to:
          uri: direct:getOrderById
      - id: loginUser
        produces: application/xml,application/json
        uri: /user/login
        param:
        - dataType: string
          name: username
          description: The user name for login
          required: true
          type: query
        - dataType: string
          name: password
          description: The password for login in clear text
          required: true
          type: query
        to:
          uri: direct:loginUser
      - id: logoutUser
        uri: /user/logout
        to:
          uri: direct:logoutUser
      - id: getUserByName
        produces: application/xml,application/json
        uri: /user/{username}
        param:
        - dataType: string
          name: username
          description: The name that needs to be fetched. Use user1 for testing.
          required: true
          type: path
        to:
          uri: direct:getUserByName
      delete:
      - id: deletePet
        uri: /pet/{petId}
        param:
        - dataType: string
          name: api_key
          required: false
          type: header
        - dataType: integer
          name: petId
          description: Pet id to delete
          required: true
          type: path
        to:
          uri: direct:deletePet
      - id: deleteOrder
        uri: /store/order/{orderId}
        description: For valid response try integer IDs with positive integer value.
        param:
        - dataType: integer
          name: orderId
          description: ID of the order that needs to be deleted
          required: true
          type: path
        to:
          uri: direct:deleteOrder
      - id: deleteUser
        uri: /user/{username}
        description: This can only be done by the logged in user.
        param:
        - dataType: string
          name: username
          description: The name that needs to be deleted
          required: true
          type: path
        to:
          uri: direct:deleteUser
      put:
      - consumes: application/json,application/xml
        id: updatePet
        uri: /pet
        param:
        - name: body
          required: true
          type: body
        to:
          uri: direct:updatePet
      - consumes: '*/*'
        id: updateUser
        uri: /user/{username}
        param:
        - dataType: string
          name: username
          required: true
          type: path
        - name: body
          required: true
          type: body
        to:
          uri: direct:updateUser
- route:
    id: from-route
    from:
      uri: direct:updatePet
      steps:
      - log:
          message: ${body}
