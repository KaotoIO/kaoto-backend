name: 🧐 Generate Docker image
on:
  pull_request:
    branches:
      - 'main'
  push:
    tags:
      - 'v*'
    branches:
      - 'main'
  workflow_dispatch:
  schedule:
    - cron:  '12 0 * * *'

jobs:
  build:
    name: 👩🏼‍🏭 Build Native Quarkus 👩🏼‍🏭
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 
      - name: 🥸 Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: 17
          check-latest: true
      - name: 😬 Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: 🔥 Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: 🤳 Build Native Quarkus
        run: mvn install -Pnative -Dquarkus.native.builder-image=quay.io/quarkus/ubi-quarkus-native-image:22.1-java17
      - name: Login to DockerHub
        uses: docker/login-action@v1
        env:
          username: ${{ secrets.DOCKER_USERNAME }}
        if: ${{env.username != ''}}
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: kaotoio/backend
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: "api"
          file: './api/src/main/docker/Dockerfile.jvm'
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
