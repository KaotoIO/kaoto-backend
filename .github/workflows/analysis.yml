name: 🧐 Analyze code
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types: [ opened, synchronize, reopened ]
jobs:
  build:
    name: 👩🏼‍🏭 Build 👩🏼‍🏭
    runs-on: ubuntu-latest
    steps:
      - name: ☄️ Checkout source code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: 🥸 Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: 17
          check-latest: true
      - name: 😬 Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: 🔥 Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: 🤳 Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: java
      - name: 🌪️ Kubernetes Kind Cluster
        uses: container-tools/kind-action@v1
      - name: 🦙 Download Camel-K
        run: wget https://github.com/apache/camel-k/releases/download/v1.9.2/camel-k-client-1.9.2-linux-64bit.tar.gz
      - name: 🐪 Decompress Camel-K
        run: tar -xvzf camel-k-client*.tar.gz
      - name: 🐫 Install Camel-K
        run: chmod +x kamel; ./kamel install --olm=false -n default --wait --registry kind-registry:5000
      - name: ✨ Download Kamelets
        run: mkdir kamelets; cd kamelets; wget https://github.com/apache/camel-kamelets/archive/refs/tags/v0.8.1.zip
      - name: 💫 Install Kamelets
        run: cd kamelets; unzip v*.zip; find camel-kamelets*/kamelets -maxdepth 1 -name '*.kamelet.yaml' -exec kubectl apply -f {} \;
      - name: 🦾 Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        if: ${{env.SONAR_TOKEN != ''}}
        run: mvn -T1C -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Panalysis
      - name: 🦾 Build and analyze without sonar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        if: ${{env.SONAR_TOKEN == ''}}
        run: mvn -T1C -B verify -Panalysis
      - name: 👀 Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
      - name: 💅 Codecov Analysis
        run: bash <(curl -s https://codecov.io/bash)
